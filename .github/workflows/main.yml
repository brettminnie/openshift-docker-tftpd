---

name: ci

on:
  push:
    branches:
      - "main"
      - "alpine"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        run: docker build . -t  ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:${{ github.sha }}
      - name: Install Goss
        uses: e1himself/goss-installation-action@v1.1.0
      - name: Execute Goss tests
        run: GOSS_SLEEP=15 dgoss run --privileged --net=host ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:${{ github.sha }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/tftpd:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Retag and Push Image
        shell: bash
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:el8-${{ steps.semvers.outputs.patch }}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:el8-latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/tftpd:latest
          docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME }}/tftpd
      - name: Push our tag once the build has completed
        shell: bash
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${{ steps.semvers.outputs.patch }}" -m "Build ${{ github.run_id }} on commit ${{ github.sha }}"
          git push --tags https://${GITHUB_ACTOR}:${{ github.token }}@github.com/${{ github.repository }}
